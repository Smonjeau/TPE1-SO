----------------------
    RESPONSABLES
----------------------

 - Master: Mati
 - Esclavo: Bruno
 - Vista: Santi


----------------------
  TERMINOS EN COMUN
----------------------

ESCLAVO:
 - La variable que contiene el fd de su endpoint del pipe será "fd2".
 - Recibe la lista de archivos desde el pipe, en formato CSV.
 - Escribe el resultado a su pipe, en formato CSV.
 - El esclavo espera las direcciones con path relativo completo (no solo nombre del archivo)
 - El esclavo va a ejecutar el minisat en tantos archivos como reciba, es decir, el master debe controlar cuantos archivos distribuye entre sus esclavos.
 - El esclavo lee del pipe y guarda en un buffer de hasta 1024 caracteres. (En teoria es mas que suficiente si no son mas de 3 archivos a la vez)

VISTA:
 - Recibe la dirección de la shm desde stdin o argumentos.
 - Muestra el contenido del buffer, el cual está en formato CSV.


----------------------
  CONSIDERACIONES
----------------------

 - Al iniciar un contenedor de docker hay que instalar minisat
 - Recordar hacer make + manual y aclarar librerias


----------------------
  FLUJO MASTER/SLAVE
----------------------

          REQ
 Slave ---------> Master

     a,b,c || EMPTY
 Slave <-------- Master

       .....

        csv_ans
 Slave ---------> Master

          ACK
 Slave <-------- Master


----------------------
  DECISIONES TOMADAS
----------------------
 -


----------------------
     FLUJO SHM
----------------------

Master:
-------
sem_wait(s1);
sem_post(s1);

write(shm, ...);


View:
-------
while(1){

  if(strlen(base) > 0){
    sem_wait(s1);
    sem_post(s1);

    printf("%s", base);
    base[0] = 0;

  }

}



----------------------
     FLUJO SHM
----------------------

Master:
-------
sem_wait(not_full);
sem_wait(free_access);
sem_post(free_access);

write(shm, ...);

signal(not_empty);


View:
-------
while(1){

  sem_wait(not_empty);
  sem_wait(free_access);
  sem_post(free_access);

  printf("%s", base);
  
  sem_post(not_full);

}

     
34 -- -- -- 12 *